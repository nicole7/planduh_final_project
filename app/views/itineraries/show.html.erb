<ul style="list-style-type:none">
  <%= render partial: "activity", collection: @activities %>
</ul>

<div id="map" style='width: 400px; height: 400px;'></div>

<script src="//maps.google.com/maps/api/js?key=AIzaSyDrLYL2C-ffJ7nncDl6Sb4QzM6Irt5yRXc"></script>
<script src="//cdn.rawgit.com/mahnunchik/markerclustererplus/master/dist/markerclusterer.min.js"></script>
<script src='//cdn.rawgit.com/printercu/google-maps-utility-library-v3-read-only/master/infobox/src/infobox_packed.js' type='text/javascript'></script> <!-- only if you need custom infoboxes -->

<script type="text/javascript">
  var mapStyle = [
    {
        "featureType": "administrative",
        "elementType": "all",
        "stylers": [
            {
                "visibility": "on"
            },
            {
                "lightness": 33
            }
        ]
    },
    {
        "featureType": "landscape",
        "elementType": "all",
        "stylers": [
            {
                "color": "#f2e5d4"
            }
        ]
    },
    {
        "featureType": "poi.park",
        "elementType": "geometry",
        "stylers": [
            {
                "color": "#c5dac6"
            }
        ]
    },
    {
        "featureType": "poi.park",
        "elementType": "labels",
        "stylers": [
            {
                "visibility": "on"
            },
            {
                "lightness": 20
            }
        ]
    },
    {
        "featureType": "road",
        "elementType": "all",
        "stylers": [
            {
                "lightness": 20
            }
        ]
    },
    {
        "featureType": "road.highway",
        "elementType": "geometry",
        "stylers": [
            {
                "color": "#c5c6c6"
            }
        ]
    },
    {
        "featureType": "road.arterial",
        "elementType": "geometry",
        "stylers": [
            {
                "color": "#e4d7c6"
            }
        ]
    },
    {
        "featureType": "road.local",
        "elementType": "geometry",
        "stylers": [
            {
                "color": "#fbfaf7"
            }
        ]
    },
    {
        "featureType": "water",
        "elementType": "all",
        "stylers": [
            {
                "visibility": "on"
            },
            {
                "color": "#acbcc9"
            }
        ]
    }
];

// # Gmaps-For_Rails Solution ##################################
// var directionsDisplay = new google.maps.DirectionsRenderer();
// var directionsService = new google.maps.DirectionsService();

// function calcRoute(hash) {
//   // var origin      = new google.maps.LatLng(41.9013442993164, -87.6317977905273);
//   // var destination = new google.maps.LatLng(41.8845841437224, -87.6489488181068);
//   // var destination2 = new google.maps.LatLng(41.8807263672352, -87.6315075159073);
//   var origin      = new google.maps.LatLng(parseFloat(hash[0]["lat"]), parseFloat(hash[0]["lng"]));
//   var destination = new google.maps.LatLng(parseFloat(hash[1]["lat"]), parseFloat(hash[1]["lng"]));
//   var destination2 = new google.maps.LatLng(parseFloat(hash[2]["lat"]), parseFloat(hash[2]["lng"]));
//   console.log(origin);
//   console.log(destination);
//   console.log(destination2);

//   // Leg 1 ###############################################
//   var request = {
//       origin:      origin,
//       destination: destination,
//       travelMode:  google.maps.TravelMode.DRIVING
//   };
//   directionsService.route(request, function(response, status) {
//     if (status == google.maps.DirectionsStatus.OK) {
//       directionsDisplay.setDirections(response);
//     }
//   });

  // Leg 2 ##################################################
  // var request2 = {
  //     origin:      destination,
  //     destination: destination2,
  //     travelMode:  google.maps.TravelMode.DRIVING
  // };
  // directionsService.route(request2, function(response, status) {
  //   if (status == google.maps.DirectionsStatus.OK) {
  //     directionsDisplay.setDirections(response);
  //   }
  // });
// }

// calcRoute(<%=raw @markers_hash.to_json %>);



  var handler = Gmaps.build('Google');
  // var directionsService = new google.maps.DirectionsService;
  // var directionsDisplay = new google.maps.DirectionsRenderer;

  // put options inside provider hash! ######################
  handler.buildMap({ provider: {minZoom: 9, styles: mapStyle}, internal: {id: 'map'}}, function(){
    markers = handler.addMarkers(<%=raw @markers_hash.to_json %>);
    handler.bounds.extendWith(markers);
    handler.fitMapToBounds();
    // directionsDisplay.setMap(handler.getMap());
  });

    // Non-Gmaps-Gem-Solution ##################################
      // function calculateAndDisplayRoute() {
      //         directionsDisplay.setMap(map);
      //         directionsService.route({
      //           origin: document.getElementById('start').value,
      //           destination: document.getElementById('end').value,
      //           travelMode: 'DRIVING'
      //         }, function(response, status) {
      //           if (status === 'OK') {
      //             directionsDisplay.setDirections(response);
      //           } else {
      //             window.alert('Directions request failed due to ' + status);
      //           }
      //         });
      //       }
      // calculateAndDisplayRoute(directionsService, directionsDisplay);

</script>




<div>
  <strong>Mode of Travel: </strong>
  <select id="mode" onchange="calcRoute();">
    <option value="DRIVING">Driving</option>
    <option value="WALKING">Walking</option>
    <option value="BICYCLING">Bicycling</option>
    <option value="TRANSIT">Transit</option>
  </select>
</div>
